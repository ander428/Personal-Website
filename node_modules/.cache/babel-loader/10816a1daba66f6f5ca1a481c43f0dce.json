{"ast":null,"code":"import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar taggedTemplateLiteral = function taggedTemplateLiteral(strings, raw) {\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n};\n\nvar _templateObject = taggedTemplateLiteral([\"\\n      background: \", \";\\n      width: \", \"px;\\n      height: \", \"px;\\n      border-radius: 50%;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n    \"], [\"\\n      background: \", \";\\n      width: \", \"px;\\n      height: \", \"px;\\n      border-radius: 50%;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n    \"]),\n    _templateObject2 = taggedTemplateLiteral([\"\\n      width: \", \"px;\\n      height: \", \"px;\\n      border-radius: 50%;\\n    \"], [\"\\n      width: \", \"px;\\n      height: \", \"px;\\n      border-radius: 50%;\\n    \"]);\n\nvar index = function (_Component) {\n  inherits(index, _Component);\n\n  function index() {\n    classCallCheck(this, index);\n    return possibleConstructorReturn(this, (index.__proto__ || Object.getPrototypeOf(index)).apply(this, arguments));\n  }\n\n  createClass(index, [{\n    key: \"render\",\n    value: function render() {\n      var Div = styled.div(_templateObject, this.props.roundedColor, this.props.imageWidth, this.props.imageHeight);\n      var Img = styled.img(_templateObject2, this.props.imageWidth - this.props.roundedSize, this.props.imageHeight - this.props.roundedSize);\n      return React.createElement(Div, null, React.createElement(Img, {\n        alt: \"\",\n        src: this.props.image\n      }));\n    }\n  }]);\n  return index;\n}(Component);\n\nindex.defaultProps = {\n  imageWidth: \"200\",\n  imageHeight: \"200\",\n  roundedSize: \"20\",\n  roundedColor: \"#1B3D50\"\n};\nexport default index;","map":null,"metadata":{},"sourceType":"module"}