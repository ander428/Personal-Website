{"ast":null,"code":"import _objectWithoutProperties from \"/home/ander428/Desktop/Github/Personal-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/home/ander428/Desktop/Github/Personal-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ander428/Desktop/Github/Personal-Website/src/components/NavTabs/NavTabs.js\";\nimport React, { useCallback, useEffect } from 'react';\nimport { constants } from \"../../utils/constants\";\nimport useStyles from \"./NavTabs.styles\";\nimport { CssBaseline, Link, AppBar, Tabs, Tab, Toolbar, IconButton, Drawer, List, ListItem, ListItemText } from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/Menu';\n\nfunction a11yProps(index) {\n  return {\n    id: \"nav-tab-\".concat(index),\n    'aria-controls': \"nav-tabpanel-\".concat(index)\n  };\n}\n\nfunction LinkTab(props) {\n  return React.createElement(Tab, Object.assign({\n    component: \"a\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n}\n\nvar NavTabs = function NavTabs(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      open = _React$useState4[0],\n      setOpen = _React$useState4[1];\n\n  var mobileWidth = constants.GLOBAL_VARS.windowSize;\n\n  var _React$useState5 = React.useState(window.innerWidth <= mobileWidth),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isMobile = _React$useState6[0],\n      setIsMobile = _React$useState6[1];\n\n  useEffect(function () {\n    window.addEventListener('resize', handleWindowSizeChange);\n    return function cleanup() {\n      window.removeEventListener('resize', handleWindowSizeChange);\n    };\n  });\n\n  var handleDrawerOpen = function handleDrawerOpen() {\n    setOpen(true);\n  };\n\n  var handleDrawerClose = function handleDrawerClose() {\n    setOpen(false);\n  };\n\n  var handleWindowSizeChange = useCallback(function () {\n    window.innerWidth > mobileWidth ? setIsMobile(false) : setIsMobile(true);\n    console.log(window.innerWidth);\n  }, []);\n\n  var handleChange = function handleChange(event, newValue) {\n    setValue(newValue);\n  };\n\n  var NavList = function NavList(props) {\n    return React.createElement(\"div\", {\n      role: \"presentation\",\n      onClick: handleDrawerClose,\n      onKeyDown: handleDrawerClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, constants.MENU.map(function (tab) {\n      return React.createElement(ListItem, {\n        button: true,\n        key: tab.id,\n        component: function component(_ref) {\n          var children = _ref.children,\n              props = _objectWithoutProperties(_ref, [\"children\"]);\n\n          return React.createElement(Link, Object.assign({\n            to: (tab.title === \"Resume\" ? \"\" : \"/#\") + tab.url\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: tab.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }));\n    })));\n  };\n\n  return isMobile ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(AppBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"end\",\n    onClick: handleDrawerOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })))), React.createElement(Drawer, {\n    anchor: \"top\",\n    open: open,\n    onClose: handleDrawerClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, NavList())) : React.createElement(Tabs, {\n    variant: \"fullWidth\",\n    value: value,\n    onChange: handleChange,\n    classes: {\n      root: classes.root,\n      flexContainer: classes.flex\n    },\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, constants.MENU.map(function (tab) {\n    return React.createElement(LinkTab, Object.assign({\n      key: tab.id,\n      style: {\n        color: \"lightgrey\",\n        textDecoration: \"none\"\n      },\n      label: React.createElement(\"span\", {\n        className: classes.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, tab.title),\n      href: (tab.title === \"Resume\" ? \"\" : \"/#\") + tab.url\n    }, a11yProps(tab.id), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }));\n  }));\n};\n\nexport default NavTabs;","map":{"version":3,"sources":["/home/ander428/Desktop/Github/Personal-Website/src/components/NavTabs/NavTabs.js"],"names":["React","useCallback","useEffect","constants","useStyles","CssBaseline","Link","AppBar","Tabs","Tab","Toolbar","IconButton","Drawer","List","ListItem","ListItemText","MenuIcon","a11yProps","index","id","LinkTab","props","NavTabs","classes","useState","value","setValue","open","setOpen","mobileWidth","GLOBAL_VARS","windowSize","window","innerWidth","isMobile","setIsMobile","addEventListener","handleWindowSizeChange","cleanup","removeEventListener","handleDrawerOpen","handleDrawerClose","console","log","handleChange","event","newValue","NavList","MENU","map","tab","children","title","url","root","flexContainer","flex","color","textDecoration","label"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect} from 'react';\nimport {constants} from \"../../utils/constants\";\nimport useStyles from \"./NavTabs.styles\";\nimport {\n    CssBaseline,\n    Link,\n    AppBar,\n    Tabs,\n    Tab,\n    Toolbar,\n    IconButton,\n    Drawer, List, ListItem, ListItemText\n} from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/Menu';\n\nfunction a11yProps(index) {\n    return {\n        id: `nav-tab-${index}`,\n        'aria-controls': `nav-tabpanel-${index}`,\n    };\n}\n\nfunction LinkTab(props) {\n    return (\n            <Tab\n                component=\"a\"\n                {...props}\n            />\n    );\n}\n\nconst NavTabs = props => {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const [open, setOpen] = React.useState(false);\n\n    const mobileWidth = constants.GLOBAL_VARS.windowSize;\n    const [isMobile, setIsMobile] = React.useState(window.innerWidth <= mobileWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', handleWindowSizeChange);\n\n        return function cleanup() {\n            window.removeEventListener('resize', handleWindowSizeChange);\n        }\n    });\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const handleWindowSizeChange = useCallback(() => {\n        window.innerWidth > mobileWidth ? setIsMobile(false) : setIsMobile(true);\n        console.log(window.innerWidth);\n    }, []);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const NavList = props => (\n        <div\n            role=\"presentation\"\n            onClick={handleDrawerClose}\n            onKeyDown={handleDrawerClose}\n        >\n            <List>\n                {constants.MENU.map((tab) => (\n                    <ListItem button key={tab.id}\n                              component={\n                                  ({children, ...props}) =>\n                                  <Link\n                                      to={(tab.title === \"Resume\" ? \"\" : \"/#\") + tab.url}\n                                        {...props} />\n                              }\n                    >\n                        <ListItemText primary={tab.title}/>\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        isMobile\n            ? (<div>\n                <CssBaseline />\n                    <AppBar>\n                        <Toolbar>\n                            <IconButton\n                                edge={\"end\"}\n                                onClick={handleDrawerOpen}\n                            >\n                                <MenuIcon />\n\n                            </IconButton>\n\n                        </Toolbar>\n                    </AppBar>\n                    <Drawer anchor=\"top\" open={open} onClose={handleDrawerClose}>\n                        {NavList()}\n                    </Drawer>\n                </div>\n            )\n            : (<Tabs\n                variant=\"fullWidth\"\n                value={value}\n                onChange={handleChange}\n                classes={{\n                    root: classes.root,\n                    flexContainer: classes.flex,\n                }}\n                centered\n                >\n                    {constants.MENU.map(tab => (\n                        <LinkTab\n                            key={tab.id}\n                            style={{color: \"lightgrey\", textDecoration: \"none\"}}\n                            label={<span className={classes.label}>{tab.title}</span>}\n                            href={(tab.title === \"Resume\" ? \"\" : \"/#\") +\n                            tab.url}\n                            {...a11yProps(tab.id)}\n\n                        />\n                    ))}\n                </Tabs>)\n    );\n};\n\nexport default NavTabs;"]},"metadata":{},"sourceType":"module"}