{"ast":null,"code":"import React from \"react\";\nexport function ReactFontSizeByTextLength(_a) {\n  var children = _a.children,\n      _b = _a.maxPercent,\n      maxPercent = _b === void 0 ? 100 : _b,\n      _c = _a.minPercent,\n      minPercent = _c === void 0 ? 0 : _c,\n      changePerChar = _a.changePerChar,\n      _d = _a.startAtChar,\n      startAtChar = _d === void 0 ? 0 : _d,\n      _e = _a.stopAtChar,\n      stopAtChar = _e === void 0 ? Infinity : _e;\n  var fontSizeInPercent = getNewFontSizeInPercent(maxPercent, minPercent, changePerChar, startAtChar, stopAtChar, Array.isArray(children) ? getNumberOfCharsForMultipleChildren(children) : getNumberOfCharsForSingleChild(children));\n  return React.createElement(\"span\", {\n    style: {\n      fontSize: \"\".concat(fontSizeInPercent, \"%\")\n    }\n  }, children);\n}\n\nvar getNumberOfCharsForSingleChild = function getNumberOfCharsForSingleChild(child) {\n  return child.props.children.length;\n};\n\nvar getNumberOfCharsForMultipleChildren = function getNumberOfCharsForMultipleChildren(children) {\n  var returnable = 0;\n  children.forEach(function (child) {\n    if (child.props.children) {\n      returnable += child.props.children.length;\n    } else {\n      returnable += 1;\n    }\n  });\n  return returnable;\n};\n\nvar getNewFontSizeInPercent = function getNewFontSizeInPercent(maxPercent, minPercent, changePerChar, startAtChar, stopAtChar, numberOfChars) {\n  var numberOfCharsAdjusted = Math.min(numberOfChars, stopAtChar);\n  var numberOfCharToConsiderForCalculation = Math.max(0, numberOfCharsAdjusted - (startAtChar - 1));\n  var fontSizeInPercent = Math.max(minPercent, maxPercent - changePerChar * numberOfCharToConsiderForCalculation);\n  return fontSizeInPercent;\n};","map":null,"metadata":{},"sourceType":"module"}